
## http://next.dev.curriki.org/xwiki/bin/edit/CreateResources/Nortel6ELessonPlan
## by Niels P. Mayer ( http://nielsmayer.com )
## modified from http://next.dev.curriki.org/xwiki/bin/edit/CreateResources/CurrikiStandardLessonPlan
## originally from http://next.dev.curriki.org/xwiki/bin/view/Groups/CreateNewGroup?viewer=code&showlinenumbers=0&language=en
## Attempting to emulate form in http://www.curriki.org/xwiki/bin/view/Project/Form+Templates?xpage=print&language=en
##
## ---------- PREAMBLE, CHECK AUTHORIZATION ----------
##
##UNCOMMENT-TO-USE-LOCAL-STYLESHEET
## <link rel="stylesheet" href="/xwiki/bin/view/CreateResources/styleCSLP?xpage=plain" type="text/css" />
##UNCOMMENT-TO-USE-LOCAL-STYLESHEET
##
#if( $context.user=="XWiki.XWikiGuest" ) ## {
  #set( $logredir = $xwiki.getRequestURL() )
  #set( $url = $xwiki.getURL("XWiki.XWikiLogin","login","xredirect=$logredir") )
  $msg.get("createresources.needaccount", [$url])
#else ## } {
  ##
  ## ----- OK, WE HAVE AUTHORITY SETUP THE FORM POST/GET ETC  -----
  ##
  #includeMacros("CreateResources.StyledMacros")
  ##  parameters passed by other forms or itself
  #set( $pageName   = $request.getParameter("pageName") )
  #set( $cameFrom   = $request.getParameter("cameFrom") )
  #set( $flow       = $request.getParameter("flow") )
  #set( $parentPage = $request.getParameter("parentPage") )
  #set( $publishSpace = $request.getParameter("publishSpace") )
## DEBUG DEBUG DEBUG
## <p>( before setting newAsset '$!request.page $request.method ): newAsset: '$!newAsset' , pageName: '$!pageName' , cameFrom: '$!cameFrom' , flow: '$!flow' , parentPage: '$!parentPage' , publishSpace: '$!publishSpace'</p>
## DEBUG DEBUG DEBUG
  #if( "$!pageName" != "" ) ## {
     ## pageName is name of previously created asset, get it and use it. For
     ## CurrikiStandardLessonPlan, this case is not defined by the spec and
     ## shouldn't happen. The main issue with getting this to work is that the
     ## TextAsset associated with the asset in pageName needs to be parsed and
     ## broken back out into the separate fields in this form. Normally none of
     ## this would be an issue if "step 2" fields were real Xwiki objects, but
     ## they're not. We end up concatenating the result of all the text fields
     ## in "step 2" and placing that as the content of the TextAsset in a hidden
     ## field of the same name -- XWiki.TextAssetClass_0 -- as would be used by
     ## Xwiki if we attached a "XWiki.TextAssetClass" to the XWiki.AssetClass on
     ## POST, the "synthetic" wysiwyg contents are stored via
     ## .updateObjectFromRequest("XWiki.TextAssetClass")
     #set( $newAsset  = $xwiki.curriki.fetchAsset($pageName) )
  #else ## } {
    ## empty pageName means no asset... so create new one. This is "default" action
     #set( $newAsset = $xwiki.curriki.createAsset($xwiki.null) )
     ## note-below: <input type="hidden"	name="pageName"		value="$!newAsset.fullName"	/>
     ## so followup POSTs set pageName to newly created asset, i.e. condition below:
  #end ## }
  #if( "$!newAsset"=="" ) ## {
    #if( "$!pageName" != "" )<p>asset creation error:</p>#else<p>asset lookup error:</p>#end
    <dl>
      <dt>request.method</dt><dd>$!request.method</dd>
      <dt>request.page</dt><dd>$!request.page</dd>
      <dt>getParameter("pageName")</dt><dd>$!pageName</dd>
      <dt>getParameter("cameFrom")</dt><dd>$!cameFrom</dd>
      <dt>getParameter("flow")</dt><dd>$!flow</dd>
      <dt>getParameter("parentPage")</dt><dd>$!parentPage</dd>
      <dt>getParameter("publishSpace")</dt><dd>$!publishSpace</dd>
    </dl>
  #else ## } ----- $newAsset defined for entire branch below ----- {
## DEBUG DEBUG DEBUG
## <p>( '$!request.page $request.method ): newAsset: '$!newAsset' , pageName: '$!pageName' , cameFrom: '$!cameFrom' , flow: '$!flow' , parentPage: '$!parentPage' , publishSpace: '$!publishSpace'</p>
## DEBUG DEBUG DEBUG
##
## ---------- JAVASCRIPT SPECIFICALLY FOR THIS FORM ----------
##
{pre}
<style type="text/css">
input {	width:expression(this.type=="text" ? "83%" : "style"); }
</style>
<script type="text/javascript" src="/xwiki/yui/yahoo/yahoo-min.js" ></script>
<script type="text/javascript" src="/xwiki/yui/treeview/treeview-min.js" ></script>
<script type="text/javascript" src="/xwiki/yui/treeview/checknode.js"></script>
<script language="javascript" type="text/javascript">
// ----------------------------------- override YUI checknode method -------------------
/**
 * jsj add
 *Invoked when the user press space key
 */
YAHOO.widget.CheckNode.prototype.getKeyCheck = function() {
    return " if( 32 == (window.event ? event.keyCode : event.which) ){ "+"YAHOO.widget.TreeView.getNode(\'" + this.tree.id + "\'," +
        this.index + ").checkClick();"+"if (event.preventDefault) event.preventDefault( ); else event.returnValue = false;}";
};

// Overrides YAHOO.widget.TextNode
YAHOO.widget.CheckNode.prototype.getNodeHtml = function() {
    // this.logger.log("Generating html");
    var sb = new Array();

    sb[sb.length] = '<table border="0" cellpadding="0" cellspacing="0">';
    sb[sb.length] = '<tr>';

    for (i=0;i<this.depth;++i) {
        sb[sb.length] = '<td class="' + this.getDepthStyle(i) + '">&#160;</td>';
    }

    sb[sb.length] = '<td';
    sb[sb.length] = ' id="' + this.getToggleElId() + '"';
    sb[sb.length] = ' class="' + this.getStyle() + '"';
    if (this.hasChildren(true)) {
        sb[sb.length] = ' onmouseover="this.className=';
        sb[sb.length] = 'YAHOO.widget.TreeView.getNode(\'';
        sb[sb.length] = this.tree.id + '\',' + this.index +  ').getHoverStyle()"';
        sb[sb.length] = ' onmouseout="this.className=';
        sb[sb.length] = 'YAHOO.widget.TreeView.getNode(\'';
        sb[sb.length] = this.tree.id + '\',' + this.index +  ').getStyle()"';
    }
    sb[sb.length] = ' onclick="javascript:' + this.getToggleLink() + '">&#160;';
    sb[sb.length] = '</td>';

    // check box
    sb[sb.length] = '<td';
    sb[sb.length] = ' id="' + this.getCheckElId() + '"';
    sb[sb.length] = ' class="' + this.getCheckStyle() + '"';
    sb[sb.length] = ' onclick="javascript:' + this.getCheckLink() + '">';
    sb[sb.length] = '&#160;</td>';


    sb[sb.length] = '<td>';
    sb[sb.length] = '<a';
    sb[sb.length] = ' id="' + this.labelElId + '"';
    sb[sb.length] = ' class="' + this.labelStyle + '"';
    sb[sb.length] = ' href="' + this.href + '"';
    sb[sb.length] = ' target="' + this.target + '"';
    if (this.hasChildren(true)) {
        sb[sb.length] = ' onmouseover="document.getElementById(\'';
        sb[sb.length] = this.getToggleElId() + '\').className=';
        sb[sb.length] = 'YAHOO.widget.TreeView.getNode(\'';
        sb[sb.length] = this.tree.id + '\',' + this.index +  ').getHoverStyle()"';
        sb[sb.length] = ' onmouseout="document.getElementById(\'';
        sb[sb.length] = this.getToggleElId() + '\').className=';
        sb[sb.length] = 'YAHOO.widget.TreeView.getNode(\'';
        sb[sb.length] = this.tree.id + '\',' + this.index +  ').getStyle()"';
    }
    sb[sb.length] = ' onkeypress="javascript:' + this.getKeyCheck(this.event)+'">';
    //sb[sb.length] = '>';
    sb[sb.length] = this.label;
    sb[sb.length] = '</a>';
    sb[sb.length] = '</td>';
    sb[sb.length] = '</tr>';
    sb[sb.length] = '</table>';

    return sb.join("");
};
/* <![CDATA[ */
//
//
//
function checkNortel6ELessonPlanForm() {
  var missed_fields_str = '';
  if (getFieldContentStr('CurrikiCode.AssetClass_0_title') == null) {
    missed_fields_str = appendSeparatedErrorMessageStr(missed_fields_str, '$msg.get('lesson.plan.required.fields.dialog.title')');
  }
  if (getFieldContentStr('CurrikiCode.AssetClass_0_description') == null) {
    missed_fields_str = appendSeparatedErrorMessageStr(missed_fields_str, '$msg.get('lesson.plan.required.fields.dialog.description')');
  }
  /*{
    var form_fw_items = getFieldContentStr('CurrikiCode.AssetClass_0_fw_items');
    if ((form_fw_items == null) || (form_fw_items == 'FW_masterFramework.WebHome')) {
      missed_fields_str = appendSeparatedErrorMessageStr(missed_fields_str, '$msg.get('lesson.plan.required.fields.dialog.subject')');
    }
  }
  { // Eductional-Level -- for validation, must look at "checked" on each button.
    var one_checked = false;
    for (var idx = 0, form_checkboxes = document.forms.inline['CurrikiCode.AssetClass_0_educational_level'];
	 ((idx < form_checkboxes.length) && !one_checked);
	 idx++) {
      if (form_checkboxes[idx].checked) {
	one_checked = true;
      }
    }
    if (!one_checked) {
      missed_fields_str = appendSeparatedErrorMessageStr(missed_fields_str, '$msg.get('lesson.plan.required.fields.dialog.level')');
    } 
  }*/
//NO-ICT-IN-SLP if ($('XWiki.AssetClass_0_instructional_component2').value.length <= 1) {
//NO-ICT-IN-SLP   missed_fields_str = appendSeparatedErrorMessageStr(missed_fields_str, '$msg.get('form.scratch.required.fields.dialog.ict')');
//NO-ICT-IN-SLP }
  if (getFieldContentStr('nlp_overview') == null) {
    missed_fields_str = appendSeparatedErrorMessageStr(missed_fields_str, '$msg.get('lesson.plan.required.fields.dialog.overview')');
  }
  if (getFieldContentStr('nlp_techinteg') == null) {
    missed_fields_str = appendSeparatedErrorMessageStr(missed_fields_str, '$msg.get('lesson.plan.required.fields.dialog.techinteg')');
  }
/* CURRIKI-2456 - No longer required fields
  if (getFieldContentStr('nlp_prereq') == null) {
    missed_fields_str = appendSeparatedErrorMessageStr(missed_fields_str, '$msg.get('lesson.plan.required.fields.dialog.prereq')');
  }
  if (getFieldContentStr('nlp_preptime') == null) {
    missed_fields_str = appendSeparatedErrorMessageStr(missed_fields_str, '$msg.get('lesson.plan.required.fields.dialog.preptime')');
  }
  if (getFieldContentStr('nlp_timecomplete') == null) {
    missed_fields_str = appendSeparatedErrorMessageStr(missed_fields_str, '$msg.get('lesson.plan.required.fields.dialog.timecomplete')');
  }
  if (getFieldContentStr('nlp_materials') == null) {
    missed_fields_str = appendSeparatedErrorMessageStr(missed_fields_str, '$msg.get('lesson.plan.required.fields.dialog.materials')');
  }
*/
  if (getFieldContentStr('nlp_project') == null) {
    missed_fields_str = appendSeparatedErrorMessageStr(missed_fields_str, '$msg.get('lesson.plan.required.fields.dialog.project')');
  }
/* CURRIKI-2456 - No longer required fields
  if (getFieldContentStr('nlp_timemanagement') == null) {
    missed_fields_str = appendSeparatedErrorMessageStr(missed_fields_str, '$msg.get('lesson.plan.required.fields.dialog.timemanagement')');
  }
  if (getFieldContentStr('nlp_assess') == null) {
    missed_fields_str = appendSeparatedErrorMessageStr(missed_fields_str, '$msg.get('lesson.plan.required.fields.dialog.assess')');
  }
*/
  if (getWysiwygFieldContent('mce_editor_0', 'nlp_engage') == null) {
    missed_fields_str = appendSeparatedErrorMessageStr(missed_fields_str, '$msg.get('lesson.plan.required.fields.dialog.engage')');
  }
  if (getWysiwygFieldContent('mce_editor_1', 'nlp_explore') == null) { 
    missed_fields_str = appendSeparatedErrorMessageStr(missed_fields_str, '$msg.get('lesson.plan.required.fields.dialog.explore')');
  }
  if (getWysiwygFieldContent('mce_editor_2', 'nlp_explain') == null) { 
    missed_fields_str = appendSeparatedErrorMessageStr(missed_fields_str, '$msg.get('lesson.plan.required.fields.dialog.explain')');
  }
  if (getWysiwygFieldContent('mce_editor_3', 'nlp_elaborate') == null) { 
    missed_fields_str = appendSeparatedErrorMessageStr(missed_fields_str, '$msg.get('lesson.plan.required.fields.dialog.elaborate')');
  }
  if (getWysiwygFieldContent('mce_editor_4', 'nlp_evaluate') == null) { 
    missed_fields_str = appendSeparatedErrorMessageStr(missed_fields_str, '$msg.get('lesson.plan.required.fields.dialog.evaluate')');
  }
/* CURRIKI-2456 - No longer required fields
  if (getWysiwygFieldContent('mce_editor_5', 'nlp_extend') == null) { 
    missed_fields_str = appendSeparatedErrorMessageStr(missed_fields_str, '$msg.get('lesson.plan.required.fields.dialog.extend')');
  }
*/
//NOT-REQD-FIELD  if (getWysiwygFieldContent('mce_editor_6', 'nlp_standards') == null) { 
//NOT-REQD-FIELD    missed_fields_str = appendSeparatedErrorMessageStr(missed_fields_str, '$msg.get('lesson.plan.required.fields.dialog.standards')');
//NOT-REQD-FIELD  }
  if (getFieldContentStr('CurrikiCode.AssetLicenseClass_0_rightsHolder') == null) {
    missed_fields_str = appendSeparatedErrorMessageStr(missed_fields_str, '$msg.get('lesson.plan.required.fields.dialog.rights')');
  }
  if (getAttachmentsSize() > $msg.get("lesson.plan.file.size.maximum")) {
    missed_fields_str = missed_fields_str + '\n\n' + '$msg.get('lesson.plan.file.size.oversize')';
  }

  var error_msg = "";
  if(missed_fields_str != ''){
	error_msg = '$msg.get('lesson.plan.required.fields.dialog')' + missed_fields_str;
  }else{
    if (getFieldContentStr('CurrikiCode.AssetClass_0_title').length > 250) {
      error_msg = '$msg.get("nortel.lesson.plan.title.more.250")';
    }
  }

  if (error_msg != '') { // since theres error messages, validation failed... bail out.
    alert(error_msg);
    setTextAssetToWikiText('$msg.get('form.done.wysiwyg.error.wikitext')');  // not POSTing due to 'false' return below, so this should not matter -- reset in case of going "back" in browser after successful POST??
    setSuccessMessage('');     //not POSTing due to 'false' return below, so this should not matter -- reset in case of going "back" in browser after successful POST??
    return false;
  }
  else { 			 // SUCCESS!
    // here, we concatenate all textarea's and wysiwyg's into output, then set the value
    // of 'XWiki.TextAssetClass_0_text' which is associated with a
    // <INPUT type="hidden" name="XWiki.TextAssetClass_0_text" id="XWiki.TextAssetClass_0_text" value="$msg.get('form.done.wysiwyg.error.wikitext')"
    // This value is sent to AssetDone via POST and an asset will be
    // created by processing the data via
    // .updateObjectFromRequest("XWiki.TextAssetClass").  NOTE THAT IF THE
    // DEFAULT VALUE OF THE HIDDEN FIELD IS SEEN ON POST, then that
    // indicates an error condition and that this code here was never
    // reached. (Firefox punts on a javascript errror and would thus
    // continue through to POST if the validation code above fails... for
    // example).
    setTextAssetToWikiText(formatTextareasIntoWikiText());
    setSuccessMessage('$msg.get('form.done.created.lessonplan')');
    return true;
  }
}
//
//
//
function checkStandardLessonPlanDirty() {
  return((getAttachmentsSize() > 0)
	 || (getFieldContentStr('CurrikiCode.AssetClass_0_title') != null)
	 || (getFieldContentStr('CurrikiCode.AssetClass_0_description') != null)
	 || (getFieldContentStr('nlp_overview') != null)
	 || (getFieldContentStr('nlp_techinteg') != null)
	 || (getFieldContentStr('nlp_prereq') != null)
	 || (getFieldContentStr('nlp_preptime') != null)
	 || (getFieldContentStr('nlp_timecomplete') != null)
	 || (getFieldContentStr('nlp_materials') != null)
	 || (getFieldContentStr('nlp_project') != null)
	 || (getFieldContentStr('nlp_timemanagement') != null)
	 || (getFieldContentStr('nlp_assess') != null)
	 || wysiwygIsDirty('mce_editor_0')
	 || wysiwygIsDirty('mce_editor_1')
	 || wysiwygIsDirty('mce_editor_2')
	 || wysiwygIsDirty('mce_editor_3')
	 || wysiwygIsDirty('mce_editor_4')
	 || wysiwygIsDirty('mce_editor_5')
	 || wysiwygIsDirty('mce_editor_6'));
}
//
//
//
function wysiwygIsDirty(wysiwyg_id_str) {
    var wysiwyg_o = tinyMCE.getInstanceById(wysiwyg_id_str);
    return ((wysiwyg_o != null) && wysiwyg_o.isDirty());
  }
//
// To be called after validation of all required fields, this function
// concatenates all the textarea and wysiwyg fields in the form
//
function formatTextareasIntoWikiText() {
  var slp_str = '#' + 'currikiNortelIcon()\n\n' + '$msg.get("nortel.lesson.plan.output.heading.content")';
  slp_str = outputTextareaSection(slp_str, 'nlp_overview',			'$msg.get("nortel.lesson.plan.overview.title")',     '\\\\\n\n', '*');
  slp_str = outputTextareaSection(slp_str, 'nlp_techinteg',			'$msg.get("nortel.lesson.plan.techinteg.title")',    '\\\\\n\n', '*');
  slp_str = outputTextareaSection(slp_str, 'nlp_prereq',			'$msg.get("nortel.lesson.plan.prereq.title")',       '\\\\\n\n', '*');
  slp_str = outputTextareaSection(slp_str, 'nlp_preptime',			'$msg.get("nortel.lesson.plan.preptime.title")',     '\\\\\n\n', '*');
  slp_str = outputTextareaSection(slp_str, 'nlp_timecomplete',			'$msg.get("nortel.lesson.plan.timecomplete.title")', '\\\\\n\n', '*');
  slp_str = outputTextareaSection(slp_str, 'nlp_materials',			'$msg.get("nortel.lesson.plan.materials.title")',    '\\\\\n\n', '*');
  slp_str = outputTextareaSection(slp_str, 'nlp_project',			'$msg.get("nortel.lesson.plan.project.title")',      '\\\\\n\n', '*');
  slp_str = outputTextareaSection(slp_str, 'nlp_timemanagement',		'$msg.get("nortel.lesson.plan.timemanagement.title")','\\\\\n\n','*');
  slp_str = outputTextareaSection(slp_str, 'nlp_assess',			'$msg.get("nortel.lesson.plan.assess.title")',       '\\\\\n\n', '*');
  slp_str = outputWysiwygSection(slp_str,  'nlp_engage',	'mce_editor_0', '$msg.get("nortel.lesson.plan.engage.title")',       '\\\\\n\n', '*');
  slp_str = outputWysiwygSection(slp_str,  'nlp_explore',	'mce_editor_1', '$msg.get("nortel.lesson.plan.explore.title")',      '\\\\\n\n', '*');
  slp_str = outputWysiwygSection(slp_str,  'nlp_explain',	'mce_editor_2', '$msg.get("nortel.lesson.plan.explain.title")',      '\\\\\n\n', '*');
  slp_str = outputWysiwygSection(slp_str,  'nlp_elaborate',	'mce_editor_3', '$msg.get("nortel.lesson.plan.elaborate.title")',    '\\\\\n\n', '*');
  slp_str = outputWysiwygSection(slp_str,  'nlp_evaluate',	'mce_editor_4', '$msg.get("nortel.lesson.plan.evaluate.title")',     '\\\\\n\n', '*');
  slp_str = outputWysiwygSection(slp_str,  'nlp_extend',	'mce_editor_5', '$msg.get("nortel.lesson.plan.extend.title")',       '\\\\\n\n', '*');
  slp_str = outputWysiwygSection(slp_str,  'nlp_standards',	'mce_editor_6', '$msg.get("nortel.lesson.plan.standards.title")',    '\\\\\n\n', '*');
  slp_str = outputAttachmentsSection(slp_str, 					'$msg.get("nortel.lesson.plan.required.attachments.title")', '\\\\\n\n','*');
  return (slp_str);
}
//
//
//
function outputTextareaSection(slp_str, section_id_str, title_str, vert_break_str, title_markup_str) {
    var section_content = getFieldContentStr(section_id_str);
    if (section_content != null) {
      slp_str = slp_str + vert_break_str + title_markup_str + title_str + title_markup_str + vert_break_str + section_content;
    }
    return (slp_str);
}
//
//
//
function outputWysiwygSection(slp_str, section_id_str, wysiwyg_id_str, title_str, vert_break_str, title_markup_str) {
  var wysiwyg_content_str = getWysiwygFieldContent(wysiwyg_id_str, section_id_str);
  if (wysiwyg_content_str != null) {
    slp_str = slp_str + vert_break_str + title_markup_str + title_str + title_markup_str + vert_break_str + wysiwyg_content_str;
  }
  return (slp_str);
}
//
//
//
function outputAttachmentsSection(slp_str, title_str, vert_break_str, title_markup_str) {
  var file_list = getAttachmentsNames();
  if (file_list.length > 0) {
    slp_str = slp_str + vert_break_str + title_markup_str + title_str + title_markup_str + vert_break_str + '#' + 'currikiattachmentBegin()\n';
    for (var idx = 0; (idx < file_list.length); idx++) {
      // for macro currikiattachment($fname) see web/src/main/webapp/skins/curriki8/macros.vm
      slp_str = slp_str + '#' + 'currikiattachment("' + file_list[idx] + '")\n';
    }
    slp_str = slp_str + '#' + 'currikiattachmentEnd()\n' + vert_break_str;
  }
  return (slp_str);
}
// set value POSTed via form hidden field w/
// id="XWiki.TextAssetClass_0_text" and default
// value="$msg.get('form.done.wysiwyg.error.wikitext')" (which if received
// on POST, indicates an unexpected error condition has occurred).
function setTextAssetToWikiText(str) {
  var input_field_TextAssetClass_o = $('CurrikiCode.TextAssetClass_0_text');
  if (input_field_TextAssetClass_o != null) {
    input_field_TextAssetClass_o.value = str;
  }
  else { alert('error in setTextAssetToWikiText()'); }
}
//
// return field's contents as string. returns null if field is empty or in case of 
// lookup error.
//
function getFieldContentStr(field_id_str) {
  var field_content_o   = $(field_id_str);
  var field_content_str = (field_content_o==null) ? "" : field_content_o.value;
  if ((field_content_str.length < 1) || (field_content_str.trim() == '')) {
    return (null);
  }
  else {
    return (field_content_str);
  }
}
// get wysiwyg contents... returns null if no content, else string of
// wikitext.  if wysiwyg_id_str WYSIWYG is not created due to platform or
// browser issues, fallback to using values in textarea assoc'd with
// wysiwyg (in which case plaintext, not wikitext).
function getWysiwygFieldContent(wysiwyg_id_str, textarea_fallback_id_str) {
  var wysiwyg_content_o = tinyMCE.getInstanceById(wysiwyg_id_str); // WYSIWYG Associated with "Content"
  if (wysiwyg_content_o == null) { // no WYSIWYG-->falback to textarea contents...
    var wysiwyg_content_txt  = $(textarea_fallback_id_str).value;
    if ((wysiwyg_content_txt.length <= 1) || (wysiwyg_content_txt.trim() == '')) {
      return null;	   // --> return signal for empty fallback textarea contents
    }
    else {
      return wysiwyg_content_txt; // return fallback textarea contents
    }
  }
  else if (!wysiwyg_content_o.isDirty()) { // WYSIWYG exists but empty...
    return null;		// --> return signal for empty contents
  }
  else {			// WYSIWYG exists with content...
    return (tinyMCE.getContent(wysiwyg_id_str));
  }
}
// set value POSTed via form hidden field w/ id="successMessage" and
// default value="" (which if received on POST, indicates an unexpected
// error condition has occurred). A nonempty string-value indicates
// validation success, the contents are displayed in AssetDone as $successMessage.
function setSuccessMessage(str) {
  var input_field_successMessage_o = $('successMessage');
  if (input_field_successMessage_o != null) {
    input_field_successMessage_o.value = str;
  }
  else { alert('error in setSuccessMessage()'); }
}
//
//
//
function appendSeparatedErrorMessageStr(message_str, missed_field_err_str) {
  return (message_str + '\n\t\t' + missed_field_err_str);
}
// 
// set and clear the unload dialog.
// 
var needUnloadDialog = false;
function clearUnloadDialog() {
  // window.onbeforeunload = null;
  // Ext.EventManager.on(window, 'beforeunload', void);
  needUnloadDialog = false;
}
//
// window.onbeforeunload -- warn of data-loss
//
function onWindowUnloading(e) {
  // if the form is not "dirty" don't pop form.leaving.dialog
  if (needUnloadDialog && checkStandardLessonPlanDirty()) {
    e.browserEvent.returnValue = "$msg.get('form.leaving.dialog')";
  }
}
//
// Note that setUnloadDialog() called at bottom of page...
//
function setUnloadDialog() {
  // window.onbeforeunload = unloadDialog;
  Ext.EventManager.on(window, 'beforeunload', onWindowUnloading); 
  needUnloadDialog = true;
}
//
// get size of files in attachments iframe
//
function getAttachmentsSize() {
  return (window.frames['attachment_iframe'].getAttachmentsSize());
}
//
// retrieve ArrayList of filenames contained in attachment
//
function getAttachmentsNames() {
  return (window.frames['attachment_iframe'].getAttachmentsNames());
}
//
// resize the attachment iframe to match size of contents. 
// this is called on <iframe id="attachment_iframe">-onload 
//
function setAttachmentsIframeSize() {
  var iframe_o = document.getElementById('attachment_iframe');
  try {
    if (iframe_o != null) {
      iframe_o.height = iframe_o.style.height = 50;  // attempt reset because FF behavior is grow-only
    }
    // this is portable way of getting at iframe DOM content per
    // http://www.mabaloo.com/Web-Development/Creating-controlling-and-manipulating-an-Iframe-through-JavaScript.html
    var doc_o = (iframe_o.contentWindow || iframe_o.contentDocument);  
    if (doc_o.document) {
      doc_o = doc_o.document;
    }
    // the iframe needs more space than 'scrollHeight' says, or we get
    // scrollbars. 5 seems to accomodate the inner and outer margin, and
    // inner and outer border, with one pixel for the margin itself.
    // nb: iframe_o.style.height only works in IE, does nothing in FF.
    // do em both for good measure?!
    if (iframe_o != null) {
	   if (Ext.isIE6) {
	     iframe_o.height = iframe_o.style.height = doc_o.body.scrollHeight * 2 + 5;
	   } else {
	     iframe_o.height = iframe_o.style.height = doc_o.body.scrollHeight + 5;
	   }
    }
  }
  catch(e) {
    if (iframe_o != null) {
      //iframe_o.height = iframe_o.style.height = 300; // bigger default height value if things go wrong
    }
  } 
}
/* ]]> */
</script>{/pre}
#set( $noDialogs = $request.getParameter("noDialogs") )  ## ?noDialogs=1 turns off add-path dialogs, for testing, or to enable "edit-again"
  ##
  ## -------------------- THE MAIN DISPLAY --------------------
  ##
  <div class="header">
  #curriki_formtitle($msg.get("nortel.lesson.plan.title"))
    <div id="nortel-lp-learnmore-line" class="lesson-plan-learn-line">
  $msg.get("nortel.lesson.plan.title.description") <a href="$msg.get('nortel.form.title.description.link1.url')" target="_blank">$msg.get("nortel.form.title.description.link1")</a><span class="separator">&nbsp;|&nbsp;</span><a href="$msg.get('nortel.form.title.description.link2.url')" target="_blank">$msg.get("nortel.form.title.description.link2")</a><span class="separator">&nbsp;|&nbsp;</span><a href="$msg.get('nortel.form.title.description.link4.url')" target="_blank">$msg.get("nortel.form.title.description.link4")</a><span class="separator">&nbsp;|&nbsp;</span><a href="$msg.get('nortel.form.title.description.link3.url')" target="_blank">$msg.get("nortel.form.title.description.link3")</a>
    </div>
  <br />$msg.get("form.required.fields.instruction")
  </div>
  ##
  ## --------------------FORM ITSELF --------------------
  ##
  ## NB: default action goes back to this form, which shouldnt happen, because,
  ## after successful validation via call to checkNortel6ELessonPlanForm(), the button
  ## below sets document.forms.inline.action='$msg.get("form.done.url")'
  ##
  <form action="" class="curriki-form1" id="inline" method="post">
  ## 
  ## Xredirect foo 
  ##
  <input type="hidden" name="xredirect" value="$xwiki.getFormEncoded($xwiki.getRequestURL())" />
  ##
  ## "XWiki.TextAssetClass_0_text" is a fake "XWiki.TextAssetClass" so that
  ## .updateObjectFromRequest("XWiki.TextAssetClass") reconstitutes a
  ## XWiki.TextAssetClass from the concatenated results of editors in this
  ## form.... This XWiki.TextAssetClass_0_text hidden field should be set
  ## via JavaScript after successful validation by
  ## checkNortel6ELessonPlanForm().  It is then transmitted to AssetDone
  ## via POST. The value "$msg.get('form.done.wysiwyg.error.wikitext')"
  ## indicates the javascript value setting didn't work.
  <input type="hidden"  name="CurrikiCode.TextAssetClass_0_text" id="CurrikiCode.TextAssetClass_0_text" value="$msg.get('form.done.wysiwyg.error.wikitext')" />
  <input type="hidden"  name="CurrikiCode.TextAssetClass_0_type" id="CurrikiCode.TextAssetClass_0_type" value="0" />
  ## Force "Curriculum: Lesson Plan" value of instructional_component2 specifically for SLP.
  ## Note lines commented out below with "NO-ICT-IN-SLP" -- normally set via
  ## display("instructional_component2","edit")
  <input type="hidden"  name="CurrikiCode.AssetClass_0_instructional_component2" id="CurrikiCode.AssetClass_0_instructional_component2" value="curriculum_lp" />
  ## Force 0-value of hidden_from_search specifically for SLP, note lines
  ## commented out with "NO-HIDDENSRCH-IN-SLP". Normally set via
  ## display("hidden_from_search","edit")
  <input type="hidden"  name="CurrikiCode.AssetClass_0_hidden_from_search" id="CurrikiCode.AssetClass_0_hidden_from_search" value="0" /> 
  ## CurrikiCode.AssetClass_0_category is a "fake" property named "category" in CurrikiCode.AssetClass.
  ## This is forced here to value "text". This hidden field is passed to AssetDone 
  ## via POST and instantiated via .updateObjectFromRequest("CurrikiCode.AssetClass")
  <input type="hidden"  name="CurrikiCode.AssetClass_0_category" id="CurrikiCode.AssetClass_0_category" value="text" /> 
  ## successMessage is a hidden field that is set to a string in validation javascript
  ## after successful validation. If AssetDone gets a POST with the default value of "" set here
  ## it will ignore the post as it means it's not validated.
  <input type="hidden" 	name="successMessage" id="successMessage" value=""      />
  <input type="hidden" 	name="page"		value="$!request.page"		/>
  <input type="hidden"	name="pageName"		value="$!newAsset.fullName"	/>
  <input type="hidden"	name="publishSpace"	value="$!publishSpace"		/>
  <input type="hidden"	name="parentPage"	value="$!parentPage"		/>
#if( "$!noDialogs"!="" )                ## { when ?noDialogs=... argument set, pass it on to AssetDone
  <input type="hidden"	name="noDialogs"	value="$noDialogs"		/>
#else                                   ## } {  -- ?noDialogs... not set, pass parameters used for add-path dialogs
  <input type="hidden"	name="flow"		value="$!flow"			/>
  <input type="hidden"	name="createLessonURL"		value="$msg.get('nortel.lesson.plan.url')"	/> ## for ICT
  <input type="hidden"	name="cameFrom"
  #if( "$!cameFrom"=="" )              ## {
   value="$msg.get('nortel.lesson.plan.url')" ## default cameFrom to this form
  #else                                ## } {
   value="$!cameFrom"                  ## pass along cameFrom
  #end                                 ## }
  />
#end                                   ## }
#####################################################################
  #curriki_formpart_begin($msg.get("lesson.plan.step1.header")) ## {
  #curriki_forminstructions($msg.get("lesson.plan.step1.instruction"))
  #curriki_formprompt($msg.get("sri.title_title"), $msg.get("nortel.lesson.plan.title_tooltip"), $msg.get("nortel.lesson.plan.title_txt"), true, "medium")
  ##$newAsset.display("title","edit")
  <input type="text" id="CurrikiCode.AssetClass_0_title" name="CurrikiCode.AssetClass_0_title" />
  #curriki_formprompt($msg.get("sri.description_title"), $msg.get("nortel.lesson.plan.description_tooltip"), $msg.get("nortel.lesson.plan.description_txt"), true, "medium")
  $newAsset.display("description","edit")
  <table class="subject-educational"><tbody><tr><td>
  #curriki_formprompt($msg.get("sri.fw_items_title"), $msg.get("sri.fw_items_tooltip"), $msg.get("sri.fw_items_txt"), true, "")
#skbListHereEditable( "CurrikiCode.AssetClass_0_trainedTopicsAndCompetencies" "trainedTopicsAndCompetencies" "topic, competency" "$!asset.trainedTopicsAndCompetencies")  
##$newAsset.display("fw_items","edit")
  </td><td>
  #curriki_formprompt($msg.get("sri.educational_level_title"), $msg.get("sri.educational_level_tooltip"), $msg.get("sri.educational_level_txt"), true, "medium")
#skbListHereEditable( "CurrikiCode.AssetClass_0_eduLevelFine" "eduLevelFine" "level" "$!asset.eduLevelFine")
##  $newAsset.display("educational_level","edit")
  </td></tr></tbody></table> ##class="subject-educational"
##NO-ICT-IN-SLP #curriki_formprompt($msg.get("sri.instructional_component2_title"), $msg.get("sri.instructional_component2_tooltip"), $msg.get("sri.instructional_component2_txt"), true, "medium")
##NO-ICT-IN-SLP $newAsset.display("instructional_component2","edit")
  #curriki_formprompt($msg.get("sri.keywords_title"), $msg.get("sri.keywords_tooltip"), $msg.get("sri.keywords_txt"), false, "medium")
  $newAsset.display("keywords","edit")
  #curriki_formprompt($msg.get("sri.language_title"), $msg.get("sri.language_tooltip"), $msg.get("sri.language_txt"), false, "medium")
  <select name="CurrikiCode.AssetClass_0_language" size="1" style="position:absolute; left:8; top:8; width:88; height:22; display:block;">
    <option value='${con.getLanguageId($lang,true)}'>$con.getLanguageName($lang,$lang)</option>
    #set($supportedLanguages2 = $xwiki.getXWikiPreference("languages").replaceAll(","," "))
    #foreach($lang2 in $supportedLanguages2.split(" "))##
	  #if($lang!=$lang2)
		  <option value='${con.getLanguageId($lang2,true)}'>$con.getLanguageName($lang2,$lang2)</option>
	  #end
	  #end
</select>
##$newAsset.display("language","edit")
  #curriki_formpart_end() ## }
#####################################################################
  #curriki_formpart_begin($msg.get("lesson.plan.step2.header")) ## {
  #curriki_forminstructions($msg.get("lesson.plan.step2.instruction"))

  #curriki_formprompt($msg.get("nortel.lesson.plan.overview.title"), $msg.get("nortel.lesson.plan.overview.tooltip"), $msg.get("nortel.lesson.plan.overview.instruction"), true, "medium")
  <textarea id="nlp_overview" name="nlp_overview"></textarea>  
  #curriki_formprompt($msg.get("nortel.lesson.plan.techinteg.title"), $msg.get("nortel.lesson.plan.techinteg.tooltip"), $msg.get("nortel.lesson.plan.techinteg.instruction"), true, "medium")
  <textarea id="nlp_techinteg" name="nlp_techinteg"></textarea>  
  #curriki_formprompt($msg.get("nortel.lesson.plan.prereq.title"), $msg.get("nortel.lesson.plan.prereq.tooltip"), $msg.get("nortel.lesson.plan.prereq.instruction"), false, "medium")
  <textarea id="nlp_prereq" name="nlp_prereq"></textarea>  
  #curriki_formprompt($msg.get("nortel.lesson.plan.preptime.title"), $msg.get("nortel.lesson.plan.preptime.tooltip"), $msg.get("nortel.lesson.plan.preptime.instruction"), false, "medium")
  <textarea id="nlp_preptime" name="nlp_preptime"></textarea>  
  #curriki_formprompt($msg.get("nortel.lesson.plan.timecomplete.title"), $msg.get("nortel.lesson.plan.timecomplete.tooltip"), $msg.get("nortel.lesson.plan.timecomplete.instruction"), false, "medium")
  <textarea id="nlp_timecomplete" name="nlp_timecomplete"></textarea>  
  #curriki_formprompt($msg.get("nortel.lesson.plan.materials.title"), $msg.get("nortel.lesson.plan.materials.tooltip"), $msg.get("nortel.lesson.plan.materials.instruction"), false, "medium")
  <textarea id="nlp_materials" name="nlp_materials"></textarea>  
  #curriki_formprompt($msg.get("nortel.lesson.plan.project.title"), $msg.get("nortel.lesson.plan.project.tooltip"), $msg.get("nortel.lesson.plan.project.instruction"), true, "medium")
  <textarea id="nlp_project" name="nlp_project"></textarea>  
  #curriki_formprompt($msg.get("nortel.lesson.plan.timemanagement.title"), $msg.get("nortel.lesson.plan.timemanagement.tooltip"), $msg.get("nortel.lesson.plan.timemanagement.instruction"), false, "medium")
  <textarea id="nlp_timemanagement" name="nlp_timemanagement"></textarea>  
  #curriki_formprompt($msg.get("nortel.lesson.plan.assess.title"), $msg.get("nortel.lesson.plan.assess.tooltip"), $msg.get("nortel.lesson.plan.assess.instruction"), false, "medium")
  <textarea id="nlp_assess" name="nlp_assess"></textarea>  
  #curriki_formprompt($msg.get("nortel.lesson.plan.engage.title"), $msg.get("nortel.lesson.plan.engage.tooltip"), $msg.get("nortel.lesson.plan.engage.instruction"), true, "medium")
  <textarea id="nlp_engage" name="nlp_engage"></textarea>  ## in JS, this is replaced w/ WYSIWYG
  #curriki_formprompt($msg.get("nortel.lesson.plan.explore.title"), $msg.get("nortel.lesson.plan.explore.tooltip"), $msg.get("nortel.lesson.plan.explore.instruction"), true, "medium")
  <textarea id="nlp_explore" name="nlp_explore"></textarea>  ## in JS, this is replaced w/ WYSIWYG
  #curriki_formprompt($msg.get("nortel.lesson.plan.explain.title"), $msg.get("nortel.lesson.plan.explain.tooltip"), $msg.get("nortel.lesson.plan.explain.instruction"), true, "medium")
  <textarea id="nlp_explain" name="nlp_explain"></textarea>  ## in JS, this is replaced w/ WYSIWYG
  #curriki_formprompt($msg.get("nortel.lesson.plan.elaborate.title"), $msg.get("nortel.lesson.plan.elaborate.tooltip"), $msg.get("nortel.lesson.plan.elaborate.instruction"), true, "medium")
  <textarea id="nlp_elaborate" name="nlp_elaborate"></textarea>  ## in JS, this is replaced w/ WYSIWYG
  #curriki_formprompt($msg.get("nortel.lesson.plan.evaluate.title"), $msg.get("nortel.lesson.plan.evaluate.tooltip"), $msg.get("nortel.lesson.plan.evaluate.instruction"), true, "medium")
  <textarea id="nlp_evaluate" name="nlp_evaluate"></textarea>  ## in JS, this is replaced w/ WYSIWYG
  #curriki_formprompt($msg.get("nortel.lesson.plan.extend.title"), $msg.get("nortel.lesson.plan.extend.tooltip"), $msg.get("nortel.lesson.plan.extend.instruction"), false, "medium")
  <textarea id="nlp_extend" name="nlp_extend"></textarea>  ## in JS, this is replaced w/ WYSIWYG
  #curriki_formprompt($msg.get("nortel.lesson.plan.standards.title"), $msg.get("nortel.lesson.plan.standards.tooltip"), $msg.get("nortel.lesson.plan.standards.instruction"), false, "medium")
  <textarea id="nlp_standards" name="nlp_standards"></textarea>  ## in JS, this is replaced w/ WYSIWYG
## Required Resources (attachments) -- fileselection w/ buttons
  #curriki_formprompt($msg.get("nortel.lesson.plan.required.attachments.title"), $msg.get("nortel.lesson.plan.required.attachments.tooltip"), $msg.get("nortel.lesson.plan.required.attachments.instruction"), false, "")
<iframe src="$newAsset.getURL("view", "xpage=lpattachments")"    ## https://svn.xwiki.org/svnroot/xwiki/xwiki-products/curriki/trunk/web/src/main/webapp/templates/lpattachments.vm
        onload="try { setAttachmentsIframeSize(); } catch(e) { alert('iframe onload error: '+e+' ...'); return false; }"
        id="attachment_iframe"
	name="attachment_iframe"
        width="100%"
	scrolling="auto"	 ## needed to make setAttachmentsIframeSize() work -- "no" doesn't reliably work across browsers
	marginheight="0"	 ## guillaume said this wouldn't set in IE via CSS
	marginwidth="0"		 ## guillaume said this wouldn't set in IE via CSS
	frameborder="0" >        ## guillaume said this wouldn't set in IE via CSS
  <h2>Sorry, your browser doesn't support iframes. Attachment Uploading functionality disabled.</h2>  ## fallback text for browsers that don't support iframe
</iframe>
  #curriki_formpart_end() ## }
#####################################################################
  #curriki_formpart_begin($msg.get("form.scratch.step3.header")) ## {
  #curriki_forminstructions($msg.get("form.scratch.step3.instruction"))
##NO-HIDDENSRCH-IN-SLP #curriki_formprompt($msg.get("sri.hidden_from_search_title"), $msg.get("sri.hidden_from_search_tooltip"), $msg.get("sri.hidden_from_search_txt"), false, "medium")
##NO-HIDDENSRCH-IN-SLP $newAsset.display("hidden_from_search","edit")
##NO-HIDDENSRCH-IN-SLP <label>$msg.get("sri.hidden_from_search_after")</label>		##special case where text is needed after display(), which appears as label-less toggle
  #curriki_formprompt($msg.get("sri.right_holder_title"), $msg.get("sri.right_holder_tooltip"), $msg.get("sri.right_holder_txt"), true, "medium")
  $newAsset.display("rightsHolder","edit")
  #curriki_formprompt($msg.get("sri.rights_title"), $msg.get("sri.rights_tooltip"), $msg.get("sri.rights_txt"), false, "medium")
  $newAsset.display("rights","edit")
  #curriki_formprompt($msg.get("sri.license_type_title"), $msg.get("sri.license_type_tooltip"), $msg.get("sri.license_type_txt"), false, "medium")
  <p><label>$msg.get("sri.license_type_heading")</label></p>		##special case where additional text is needed as prompt before display()
  $newAsset.display("licenseType","edit")
  #curriki_formpart_end() ## }
#####################################################################
  #curriki_formpart_begin($msg.get("form.scratch.step4.header")) ## {
  <p><label>$msg.get("form.scratch.step4.instruction")</label></p>
  <p class="links">
     <button
      onclick="try { if (document.forms.inline.onsubmit) document.forms.inline.onsubmit(); if (checkNortel6ELessonPlanForm()) { clearUnloadDialog(); startWaitingDialog(); document.forms.inline.action='$msg.get("form.done.url")'; document.forms.inline.submit(); } return false; } catch(e) { alert('$msg.get("form.scratch.submit.button") button onclick error: '+e+' ...'); return false; }"
      >$msg.get("form.scratch.submit.button")</button>
     #if( "$!cameFrom" != "" ) ## { 
       #set( $cancelURL = $cameFrom )
     #else ## } {  
       #set( $cancelURL = $xwiki.getURL("Main.WebHome") ) ## cameFrom not set means go to WebHome
     #end ## }
     <button class="cancel"
      onclick="try { clearUnloadDialog(); window.location.href='$cancelURL'; return false; } catch(e) { alert('$msg.get("form.scratch.cancel.button") button onclick error: '+e+' ...'); return false; }"
      >$msg.get("form.scratch.cancel.button")</button>
  </p>
  #curriki_formpart_end() ## }
#####################################################################
  <div class="tooltips">
    {pre} $xwiki.addTooltipJS() {/pre}
  </div>
  </form>
#set( $noWYSIWYG  = $request.getParameter("noWYSIWYG") ) ##For testing,etc, add parameter ?noWYSIWYG=1 to force WYSIWYG editors to not display, and use TEXTAREA instead
#if( "$!noWYSIWYG" == "" ) ## {
#curriki_wysiwyg_loader_preamble()
#if( "$!publishSpace"=="" )            ## {
 #set( $user = $context.user )
  #if( $user.startsWith("XWiki.") )    ## {
    #set( $shortname = $user.substring(6) )
  #else                                ## } {
    #set( $shortname = $user )
  #end                                 ## }
  #set( $wysi_publishSpace = "Coll_${shortname}" )
#else ## } {
  #set( $wysi_publishSpace = $publishSpace )
#end                                   ## }
#curriki_SLP_wysiwyg_loader_editor("nlp_engage", $newAsset, $wysi_publishSpace)		## id="mce_editor_0"
#curriki_SLP_wysiwyg_loader_editor("nlp_explore", $newAsset, $wysi_publishSpace)	## id="mce_editor_1"
#curriki_SLP_wysiwyg_loader_editor("nlp_explain", $newAsset, $wysi_publishSpace)	## id="mce_editor_2"
#curriki_SLP_wysiwyg_loader_editor("nlp_elaborate", $newAsset, $wysi_publishSpace)	## id="mce_editor_3"
#curriki_SLP_wysiwyg_loader_editor("nlp_evaluate", $newAsset, $wysi_publishSpace)	## id="mce_editor_4"
#curriki_SLP_wysiwyg_loader_editor("nlp_extend", $newAsset, $wysi_publishSpace)		## id="mce_editor_5"
#curriki_SLP_wysiwyg_loader_editor("nlp_standards", $newAsset, $wysi_publishSpace)	## id="mce_editor_6"
#end ## } -- if "$!noWYSIWYG"==""
{pre}<script language="javascript" type="text/javascript">
/* <![CDATA[ */
/*
 * this javascript code  must be at end, otherwise  strange   things
 * happen, like "License Deed" doesn't show up...
 */
function startWaitingDialog() {
#if( "$!noDialogs"!="1" )  ## {
  Curriki.showLoading();
#end ## }
}
/*
 * on window unload, dialog warning of dataloss
 */
setUnloadDialog();
/*
 * HACK: Tell TinyMCE to leave-alone the URL's ... they are fine as-is.. as relative links
 * during edit in AssetTemp/xxxxxxx, and as permanent links in $wysi_publishSpace on save
 */
tinyMCE.convertURL = function(url, node, on_save) { return url; };
/* ]]> */
</script>{/pre}
#end ## } -- else, aka "$!newAsset"!="" 
#end ## } -- $context.user=="XWiki.XWikiGuest"