## http://next.dev.curriki.org/xwiki/bin/edit/CreateResources/CurrikiExtendedLessonPlan
#if( $context.user=="XWiki.XWikiGuest" )
  #################################### If not login, show login information
  #set( $logredir = $xwiki.getRequestURL() )
  #set( $url = $xwiki.getURL("XWiki.XWikiLogin","login","xredirect=$logredir") )
  $msg.get("createresources.needaccount", [$url])
#else
  #################################### If logined, show WebQuest page
  #includeMacros("CreateResources.StyledMacros")
  #set($pageName = $request.getParameter("pageName"))
  #set($cameFrom = $request.getParameter("cameFrom"))
  #set($flow = $request.getParameter("flow"))
  #set($parentPage = $request.getParameter("parentPage"))
  #set($publishSpace = $request.getParameter("publishSpace"))
    #set( $reqparas = $request.getParameterNames())
  #if("$!pageName" != "") 
     #set($newAsset = $xwiki.curriki.fetchAsset($pageName))
  #else
     #set($newAsset = $xwiki.curriki.createAsset($xwiki.null))
  #end 
  #################################### If newAsset is null, show error message
  #if( "$!newAsset"=="" ) 
    #if( "$!pageName" != "" )<p>asset creation error:</p>#else<p>asset lookup error:</p>#end
    <dl>
      <dt>request.method</dt><dd>$!request.method</dd>
      <dt>request.page</dt><dd>$!request.page</dd>
      <dt>getParameter("pageName")</dt><dd>$!pageName</dd>
      <dt>getParameter("cameFrom")</dt><dd>$!cameFrom</dd>
      <dt>getParameter("flow")</dt><dd>$!flow</dd>
      <dt>getParameter("parentPage")</dt><dd>$!parentPage</dd>
      <dt>getParameter("publishSpace")</dt><dd>$!publishSpace</dd>
    </dl>
  #else
    #################################### else ,show page
    <script language="javascript" type="text/javascript">
    {pre}
    function checkTemplateForm() {
      var missed_fields_str = '';
      if (getFieldContentStr('CurrikiCode.AssetClass_0_title') == null) {
        missed_fields_str = appendSeparatedErrorMessageStr(missed_fields_str, '$msg.get('lesson.plan.required.fields.dialog.title')');
      }
      if (getFieldContentStr('CurrikiCode.AssetClass_0_description') == null) {
        missed_fields_str = appendSeparatedErrorMessageStr(missed_fields_str, '$msg.get('lesson.plan.required.fields.dialog.description')');
      }
      /*{
        var form_fw_items = getFieldContentStr('CurrikiCode.AssetClass_0_fw_items');
        if ((form_fw_items == null) || (form_fw_items == 'FW_masterFramework.WebHome')) {
          missed_fields_str = appendSeparatedErrorMessageStr(missed_fields_str, '$msg.get('lesson.plan.required.fields.dialog.subject')');
        }
      }
      { // Eductional-Level -- for validation, must look at "checked" on each button.
        var one_checked = false;
        for (var idx = 0, form_checkboxes = document.forms.inline['CurrikiCode.AssetClass_0_educational_level'];
         ((idx < form_checkboxes.length) && !one_checked);
         idx++) {
          if (form_checkboxes[idx].checked) {
        one_checked = true;
          }
        }
        if (!one_checked) {
          missed_fields_str = appendSeparatedErrorMessageStr(missed_fields_str, '$msg.get('lesson.plan.required.fields.dialog.level')');
        }
      }*/
      if(!checkTableText(0)){
        missed_fields_str = appendSeparatedErrorMessageStr(missed_fields_str, '$msg.get('efs.required.fields.dialog.summary')');
      }
      if (getWysiwygFieldContent('mce_editor_0', 'nlp_standards') == null) {
        missed_fields_str = appendSeparatedErrorMessageStr(missed_fields_str, '$msg.get('efs.required.fields.dialog.standards')');
      }
      if (getFieldContentStr('nlp_essential_question') == null) {
        missed_fields_str = appendSeparatedErrorMessageStr(missed_fields_str, '$msg.get('efs.required.fields.dialog.essential_questions')');
      }
      if (getFieldContentStr('nlp_guiding_question') == null) {
        missed_fields_str = appendSeparatedErrorMessageStr(missed_fields_str, '$msg.get('efs.required.fields.dialog.guiding_questions')');
      }
      if (getFieldContentStr('nlp_materials') == null) {
        missed_fields_str = appendSeparatedErrorMessageStr(missed_fields_str, '$msg.get('efs.required.fields.dialog.materials')');
      }
      if(!checkTableText(1)){
        missed_fields_str = appendSeparatedErrorMessageStr(missed_fields_str, '$msg.get('efs.required.fields.dialog.procedures')');
      }
      if (getFieldContentStr('nlp_modifications') == null) {
        missed_fields_str = appendSeparatedErrorMessageStr(missed_fields_str, '$msg.get('efs.required.fields.dialog.modifications')');
      }
      if(!checkTableText(2)){
        missed_fields_str = appendSeparatedErrorMessageStr(missed_fields_str, '$msg.get('efs.required.fields.dialog.assessment')');
      }
      if (getFieldContentStr('nlp_glossary') == null) {
        missed_fields_str = appendSeparatedErrorMessageStr(missed_fields_str, '$msg.get('efs.required.fields.dialog.glossary')');
      }
      if (getFieldContentStr('nlp_student_work') == null) {
        missed_fields_str = appendSeparatedErrorMessageStr(missed_fields_str, '$msg.get('efs.required.fields.dialog.student_work')');
      }
      if (getFieldContentStr('CurrikiCode.AssetLicenseClass_0_rightsHolder') == null) {
        missed_fields_str = appendSeparatedErrorMessageStr(missed_fields_str, '$msg.get('lesson.plan.required.fields.dialog.rights')');
      }
      if (getAttachmentsSize() > $msg.get("efs.step2.file.size.maximum")) {
        missed_fields_str = missed_fields_str + '\n\n' + '$msg.get('efs.step2.file.size.oversize')';
      }
      var error_msg = "";
      if(missed_fields_str != ''){
        error_msg = '$msg.get('lesson.plan.required.fields.dialog')' + missed_fields_str;
      }else{
        if (getFieldContentStr('CurrikiCode.AssetClass_0_title').length > 125) {
          error_msg = '$msg.get("efs.title.more.125")';
        }
      }
      if (error_msg != '') { // since theres error messages, validation failed... bail out.
        alert(error_msg);
        setTextAssetToWikiText('$msg.get('form.done.wysiwyg.error.wikitext')');  // not POSTing due to 'false' return below, so this should not matter -- reset in case of going "back" in browser after successful POST??
        setSuccessMessage('');     //not POSTing due to 'false' return below, so this should not matter -- reset in case of going "back" in browser after successful POST??
        return false;
      } else {
        setTextAssetToWikiText(formatTextareasIntoWikiText());
        setSuccessMessage('$msg.get('form.done.created.lessonplan')');
        return true;
      }
    }
    function checkTemplateDirty() {
      if (getAttachmentsSize() > 0) {
        return true;
      }
      if (getFieldContentStr('CurrikiCode.AssetClass_0_title') != null) {
        return true;
      }
      if (getFieldContentStr('CurrikiCode.AssetClass_0_description') != null) {
        return true;
      }
      if (wysiwygIsDirty('mce_editor_0')) {
        return true;
      }
      if (getFieldContentStr('nlp_overarching_question') != null) {
        return true;
      }
      if (getFieldContentStr('nlp_essential_question') != null) {
        return true;
      }
      if (getFieldContentStr('nlp_guiding_question') != null) {
        return true;
      }
      if (getFieldContentStr('nlp_materials') != null) {
        return true;
      }
      if (getFieldContentStr('nlp_modifications') != null) {
        return true;
      }
      if (getFieldContentStr('nlp_glossary') != null) {
        return true;
      }
      if (getFieldContentStr('nlp_reflection') != null) {
        return true;
      }
      if (getFieldContentStr('nlp_student_work') != null) {
        return true;
      }
      return false;
    }

    function wysiwygIsDirty(wysiwyg_id_str) {
        var wysiwyg_o = tinyMCE.getInstanceById(wysiwyg_id_str);
        return ((wysiwyg_o != null) && wysiwyg_o.isDirty());
    }

    function formatTextareasIntoWikiText() {
      var slp_str = '';       // the string we concat into the TextAssetClass contents
      var title_markup_str = '*';
      var vert_break_str = '\\\\\n\n';
      // {image:CloudInstituteLogo.gif|68|64|middle|middle|CreateResources.TemplateThumbnails}
      // slp_str = '<img src="$msg.get('efs.title.learn.link4.thumbnail')" align="middle">'+vert_break_str+'$msg.get("efs.output.default.framework.attribution")';
      // slp_str = '{image:CloudInstituteLogo.gif|68|64|middle|middle|CreateResources.TemplateThumbnails}$msg.get("efs.output.default.framework.attribution")';
      slp_str = '#'+'currikiEfSLPIcon()'+vert_break_str+'$msg.get("efs.output.default.framework.attribution")';
      {
        var form_summary = getTableText(0);
        if (form_summary != null) {
          slp_str = ((slp_str != '') ? (slp_str + vert_break_str) : '') + title_markup_str + '$msg.get("efs.step2.summary.title")' + title_markup_str +  vert_break_str + form_summary;
        }
      }
      {
        var form_standards = getWysiwygFieldContent('mce_editor_0', 'nlp_standards');
        if (form_standards != null) {
          slp_str=((slp_str!='')?(slp_str+vert_break_str):'')+title_markup_str+'$msg.get("efs.step2.standards.title")'+title_markup_str+vert_break_str+form_standards;
        }
      }
      {
        var form_overarching_question = getFieldContentStr('nlp_overarching_question');
        if (form_overarching_question != null) {
          form_overarching_question=form_overarching_question.replace(/\r\n/g,'\\\\').replace(/\n/g,'\\\\');
          slp_str=((slp_str!='')?(slp_str+vert_break_str):'')+title_markup_str+'$msg.get("efs.step2.overarching_question.title")'+title_markup_str+vert_break_str+form_overarching_question;
        }
      }
      {
        var form_essential_question = getFieldContentStr('nlp_essential_question');
        if (form_essential_question != null) {
          form_essential_question=form_essential_question.replace(/\r\n/g,'\\\\').replace(/\n/g,'\\\\');
          slp_str=((slp_str!='')?(slp_str+vert_break_str):'')+title_markup_str+'$msg.get("efs.step2.essential_question.title")'+title_markup_str+vert_break_str+form_essential_question;
        }
      }
      {
        var form_guiding_question = getFieldContentStr('nlp_guiding_question');
        if (form_guiding_question != null) {
          form_guiding_question=form_guiding_question.replace(/\r\n/g,'\\\\').replace(/\n/g,'\\\\');
          slp_str=((slp_str!='')?(slp_str+vert_break_str):'')+title_markup_str+'$msg.get("efs.step2.guiding_question.title")'+title_markup_str+vert_break_str+form_guiding_question;
        }
      }
      {
        var nlp_materials = getFieldContentStr('nlp_materials');
        if (nlp_materials != null) {
          nlp_materials=nlp_materials.replace(/\r\n/g,'\\\\').replace(/\n/g,'\\\\');
          slp_str=((slp_str!='')?(slp_str+vert_break_str):'')+title_markup_str+'$msg.get("efs.step2.materials.title")'+title_markup_str+vert_break_str+nlp_materials;
        }
      }
      {
        var form_procedures = getTableText(1);
        if (form_procedures != null) {
          slp_str = ((slp_str != '') ? (slp_str + vert_break_str) : '') + title_markup_str + '$msg.get("efs.step2.procedures.title")' + title_markup_str +  vert_break_str + form_procedures;
        }
      }
      {
        var nlp_modifications = getFieldContentStr('nlp_modifications');
        if (nlp_modifications != null) {
          nlp_modifications=nlp_modifications.replace(/\r\n/g,'\\\\').replace(/\n/g,'\\\\');
          slp_str=((slp_str!='')?(slp_str+vert_break_str):'')+title_markup_str+'$msg.get("efs.step2.modifications.title")'+title_markup_str+vert_break_str+nlp_modifications;
        }
      }
      {
        var form_assessment = getTableText(2);
        if (form_assessment != null) {
          slp_str = ((slp_str != '') ? (slp_str + vert_break_str) : '') + title_markup_str + '$msg.get("efs.step2.assessment.title")' + title_markup_str +  vert_break_str + form_assessment;
        }
      }
      {
        var form_glossary = getFieldContentStr('nlp_glossary');
        if (form_glossary != null) {
          form_glossary=form_glossary.replace(/\r\n/g,'\\\\').replace(/\n/g,'\\\\');
          slp_str = ((slp_str != '') ? (slp_str + vert_break_str) : '') + title_markup_str + '$msg.get("efs.step2.glossary.title")' + title_markup_str +  vert_break_str + form_glossary;
        }
      }
      {
        var form_reflection = getFieldContentStr('nlp_reflection');
        if (form_reflection != null) {
          form_reflection=form_reflection.replace(/\r\n/g,'\\\\').replace(/\n/g,'\\\\');
          slp_str = ((slp_str != '') ? (slp_str + vert_break_str) : '') + title_markup_str + '$msg.get("efs.step2.reflection.title")' + title_markup_str +  vert_break_str + form_reflection;
        }
      }
      {
        var form_student_work = getFieldContentStr('nlp_student_work');
        if (form_student_work != null) {
          form_student_work=form_student_work.replace(/\r\n/g,'\\\\').replace(/\n/g,'\\\\');
          slp_str = ((slp_str != '') ? (slp_str + vert_break_str) : '') + title_markup_str + '$msg.get("efs.step2.student_work.title")' + title_markup_str +  vert_break_str + form_student_work;
        }
      }
      {
        var file_list = getAttachmentsNames();
        if (file_list.length > 0) {
          slp_str=((slp_str!='')?(slp_str+vert_break_str):'')+title_markup_str+'$msg.get("efs.step2.required.attachments.title")'+title_markup_str+vert_break_str+'#'+'currikiattachmentBegin()\n';
          for (var idx = 0; (idx < file_list.length); idx++) {
            // for macro currikiattachment($fname) see web/src/main/webapp/skins/curriki8/macros.vm
            slp_str = slp_str + '#' + 'currikiattachment("' + file_list[idx] + '")\n';
          }
          slp_str = slp_str + '#' + 'currikiattachmentEnd()\n' + vert_break_str;
        }
      }
      {
        // reset keywords
        var keywords=getFieldContentStr('CurrikiCode.AssetClass_0_keywords');
        if(keywords==null||keywords==''){
          keywords='EfS sustainability';
        }else{
          if(keywords.indexOf('EfS')==-1){
            keywords+=' EfS';
          }
          if(keywords.indexOf('sustainability')==-1){
            keywords+=' sustainability';
          }
        }
        var keywords_o = $('CurrikiCode.AssetClass_0_keywords');
        if(keywords_o!=null){
          keywords_o.value=keywords;
        }
      }
      return (slp_str);
    }
    function setTextAssetToWikiText(str) {
      var input_field_TextAssetClass_o = $('CurrikiCode.TextAssetClass_0_text');
      if (input_field_TextAssetClass_o != null) {
        input_field_TextAssetClass_o.value = str;
      }
      else { alert('error in setTextAssetToWikiText()'); }
    }
    function getFieldContentStr(field_id_str) {
      var field_content_o   = $(field_id_str);
      var field_content_str = (field_content_o==null) ? "" : field_content_o.value;
      if ((field_content_str.length < 1) || (field_content_str.trim() == '')) {
        return (null);
      }
      else {
        return (field_content_str);
      }
    }
    // get wysiwyg contents... returns null if no content, else string of
    // wikitext.  if wysiwyg_id_str WYSIWYG is not created due to platform or
    // browser issues, fallback to using values in textarea assoc'd with
    // wysiwyg (in which case plaintext, not wikitext).
    function getWysiwygFieldContent(wysiwyg_id_str, textarea_fallback_id_str) {
      var wysiwyg_content_o = tinyMCE.getInstanceById(wysiwyg_id_str); // WYSIWYG Associated with "Content"
      if (wysiwyg_content_o == null) { // no WYSIWYG-->falback to textarea contents...
        var wysiwyg_content_txt  = $(textarea_fallback_id_str).value;
        if ((wysiwyg_content_txt.length <= 1) || (wysiwyg_content_txt.trim() == '')) {
          return null;     // --> return signal for empty fallback textarea contents
        }
        else {
          return wysiwyg_content_txt; // return fallback textarea contents
        }
      }
      else if (!wysiwyg_content_o.isDirty()) { // WYSIWYG exists but empty...
        return null;        // --> return signal for empty contents
      }
      else {            // WYSIWYG exists with content...
        return (tinyMCE.getContent(wysiwyg_id_str));
      }
    }
    function setSuccessMessage(str) {
      var input_field_successMessage_o = $('successMessage');
      if (input_field_successMessage_o != null) {
        input_field_successMessage_o.value = str;
      }
      else { alert('error in setSuccessMessage()'); }
    }
    function appendSeparatedErrorMessageStr(message_str, missed_field_err_str) {
      return(message_str + '\n\t\t' + missed_field_err_str);
    }
    var needUnloadDialog = false;
    function clearUnloadDialog() {
      needUnloadDialog = false;
    }
    function onWindowUnloading(e) {
      // if the form is not "dirty" don't pop form.leaving.dialog
      if (needUnloadDialog && checkTemplateDirty()) {
        e.browserEvent.returnValue = '$msg.get("form.leaving.dialog")';
      }
    }
    function setUnloadDialog() {
      // window.onbeforeunload = unloadDialog;
      Ext.EventManager.on(window, 'beforeunload', onWindowUnloading); 
      needUnloadDialog = true;
    }
    function getAttachmentsSize() {
      return (window.frames['attachment_iframe'].getAttachmentsSize());
    }
    function getAttachmentsNames() {
      return (window.frames['attachment_iframe'].getAttachmentsNames());
    }
    function setAttachmentsIframeSize() {
      var iframe_o = document.getElementById('attachment_iframe');
      try {
        if (iframe_o != null && !Ext.isIE6) {
          iframe_o.height = iframe_o.style.height = 50;  // attempt reset because FF behavior is grow-only
        }
        // this is portable way of getting at iframe DOM content per
        // http://www.mabaloo.com/Web-Development/Creating-controlling-and-manipulating-an-Iframe-through-JavaScript.html
        var doc_o = (iframe_o.contentWindow || iframe_o.contentDocument);  
        if (doc_o.document) {
          doc_o = doc_o.document;
        }
        // the iframe needs more space than 'scrollHeight' says, or we get
        // scrollbars. 5 seems to accomodate the inner and outer margin, and
        // inner and outer border, with one pixel for the margin itself.
        // nb: iframe_o.style.height only works in IE, does nothing in FF.
        // do em both for good measure?!
        if (iframe_o != null) {
           if (Ext.isIE6) {
             iframe_o.height = iframe_o.style.height = doc_o.body.scrollHeight + 30;
           } else {
             iframe_o.height = iframe_o.style.height = doc_o.body.scrollHeight + 5;
           }
        }
      } catch(e) {
        if (iframe_o != null) {
          iframe_o.height = iframe_o.style.height = 300; // bigger default height value if things go wrong
        }
      }
    }
    {/pre}
    </script>
    <style type="text/css">
    {pre}
    #includeInContext("CreateResources.PopulateTableCss")
    #assessment_div .x-grid3-hd-0,#assessment_div .x-grid3-hd-1,#assessment_div .x-grid3-hd-2,#assessment_div .x-grid3-hd-3,#assessment_div .x-grid3-hd-4{text-align:left;}
    {/pre}
    </style>
    <script type="text/javascript" src="/xwiki/yui/yahoo/yahoo-min.js" ></script>
    <script type="text/javascript" src="/xwiki/yui/treeview/treeview-min.js" ></script>
    <script type="text/javascript" src="/xwiki/yui/treeview/checknode.js"></script>
    <script>
    {pre}
    // ----------------------------------- override YUI checknode method -------------------
    /**
     * jsj add
     * Invoked when the user press space key
     */
    YAHOO.widget.CheckNode.prototype.getKeyCheck = function() {
      return " if( 32 == (window.event ? event.keyCode : event.which) ){ "+"YAHOO.widget.TreeView.getNode(\'" + this.tree.id + "\'," +
          this.index + ").checkClick();"+"if (event.preventDefault) event.preventDefault( ); else event.returnValue = false;}";
    };
    // Overrides YAHOO.widget.TextNode
    YAHOO.widget.CheckNode.prototype.getNodeHtml = function() {
      // this.logger.log("Generating html");
      var sb = new Array();
      sb[sb.length] = '<table border="0" cellpadding="0" cellspacing="0">';
      sb[sb.length] = '<tr>';
      for (i=0;i<this.depth;++i) {
        sb[sb.length] = '<td class="' + this.getDepthStyle(i) + '">&#160;</td>';
      }
      sb[sb.length] = '<td';
      sb[sb.length] = ' id="' + this.getToggleElId() + '"';
      sb[sb.length] = ' class="' + this.getStyle() + '"';
      if (this.hasChildren(true)) {
        sb[sb.length] = ' onmouseover="this.className=';
        sb[sb.length] = 'YAHOO.widget.TreeView.getNode(\'';
        sb[sb.length] = this.tree.id + '\',' + this.index +  ').getHoverStyle()"';
        sb[sb.length] = ' onmouseout="this.className=';
        sb[sb.length] = 'YAHOO.widget.TreeView.getNode(\'';
        sb[sb.length] = this.tree.id + '\',' + this.index +  ').getStyle()"';
      }
      sb[sb.length] = ' onclick="javascript:' + this.getToggleLink() + '">&#160;';
      sb[sb.length] = '</td>';
      // check box
      sb[sb.length] = '<td';
      sb[sb.length] = ' id="' + this.getCheckElId() + '"';
      sb[sb.length] = ' class="' + this.getCheckStyle() + '"';
      sb[sb.length] = ' onclick="javascript:' + this.getCheckLink() + '">';
      sb[sb.length] = '&#160;</td>';
      sb[sb.length] = '<td>';
      sb[sb.length] = '<a';
      sb[sb.length] = ' id="' + this.labelElId + '"';
      sb[sb.length] = ' class="' + this.labelStyle + '"';
      sb[sb.length] = ' href="' + this.href + '"';
      sb[sb.length] = ' target="' + this.target + '"';
      if (this.hasChildren(true)) {
        sb[sb.length] = ' onmouseover="document.getElementById(\'';
        sb[sb.length] = this.getToggleElId() + '\').className=';
        sb[sb.length] = 'YAHOO.widget.TreeView.getNode(\'';
        sb[sb.length] = this.tree.id + '\',' + this.index +  ').getHoverStyle()"';
        sb[sb.length] = ' onmouseout="document.getElementById(\'';
        sb[sb.length] = this.getToggleElId() + '\').className=';
        sb[sb.length] = 'YAHOO.widget.TreeView.getNode(\'';
        sb[sb.length] = this.tree.id + '\',' + this.index +  ').getStyle()"';
      }
      sb[sb.length] = ' onkeypress="javascript:' + this.getKeyCheck(this.event)+'">';
      //sb[sb.length] = '>';
      sb[sb.length] = this.label;
      sb[sb.length] = '</a>';
      sb[sb.length] = '</td>';
      sb[sb.length] = '</tr>';
      sb[sb.length] = '</table>';
      return sb.join("");
    };
    var grid_config=[{
      renderTo:'summary_div',
      header:['$msg.get("efs.step2.summary.grade")','$msg.get("efs.step2.summary.unit")','$msg.get("efs.step2.summary.number")','$msg.get("efs.step2.summary.periods")'],
      tooltip:['$msg.get("efs.step2.summary.grade.tooltip")','$msg.get("efs.step2.summary.unit.tooltip")','$msg.get("efs.step2.summary.number.tooltip")','$msg.get("efs.step2.summary.periods.tooltip")'],
      columns:['s_grade','s_unit','s_number','s_periods'],
      width:[142,142,143,143],
      data:[{s_grade:'',s_unit:'',s_number:'',s_periods:''}],
      preEl:'CurrikiCode.AssetClass_0_language',
      nextEl:'mce_editor_0'
    },{
      renderTo:'procedures_div',
      header:['$msg.get("efs.step2.procedures.row1.col1_header")','$msg.get("efs.step2.procedures.row1.col2_header")','$msg.get("efs.step2.procedures.row1.col3_header")'],
      tooltip:['','',''],
      columns:['s_class','s_learning','s_procedures'],
      width:[190,190,190],
      data:[{s_class:'$msg.get("efs.step2.procedures.row2.col1_sample")',s_learning:'',s_procedures:''},
        {s_class:'$msg.get("efs.step2.procedures.row3.col1_sample")',s_learning:'$msg.get("efs.step2.procedures.row3.col2_sample")',s_procedures:'$msg.get("efs.step2.procedures.row3.col3_sample")'},
        {s_class:'',s_learning:'',s_procedures:''},
        {s_class:'',s_learning:'',s_procedures:''}],
      preEl:'nlp_materials',
      nextEl:'addRowBtn_procedures'
    },{
      renderTo:'assessment_div',
      header:['$msg.get("efs.step2.assessment.standard")','$msg.get("efs.step2.assessment.indicator")','$msg.get("efs.step2.assessment.instrument")','$msg.get("efs.step2.assessment.criteria")'],
      tooltip:['$msg.get("efs.step2.assessment.standard.tooltip")','$msg.get("efs.step2.assessment.indicator.tooltip")','$msg.get("efs.step2.assessment.instrument.tooltip")','$msg.get("efs.step2.assessment.criteria.tooltip")'],
      columns:['s_standard','s_indicator','s_instrument','s_criteria'],
      width:[142,142,143,143],
      data:[{s_standard:'',s_indicator:'',s_instrument:'',s_criteria:''},{s_standard:'',s_indicator:'',s_instrument:'',s_criteria:''}],
      preEl:'nlp_modifications',
      nextEl:'addRowBtn_assessment'
    }];
    {/pre}
    #includeInContext("CreateResources.PopulateTableJs")
    </script>
    #################################### JS end , title
    #set( $noDialogs = $request.getParameter("noDialogs") )  ## ?noDialogs=1 turns off add-path dialogs, for testing, or to enable "edit-again"
    <div class="header" style="margin-left: 10px">
    #curriki_formtitle($msg.get("efs.title.title"))
    $msg.get("efs.title.learn") <a href="$msg.get('efs.title.learn.link1.url')" target="_blank">$msg.get("efs.title.learn.link1")</a>
    <span class="separator">&nbsp;|&nbsp;</span>
    <a href="$msg.get('efs.title.learn.link2.url')" target="_blank">$msg.get("efs.title.learn.link2")</a>
    <span class="separator">&nbsp;|&nbsp;</span>
    <a href="$msg.get('efs.title.learn.link3.url')" target="_blank">$msg.get("efs.title.learn.link3")</a>
    <span class="separator">&nbsp;|&nbsp;</span>
    <a href="$msg.get('efs.title.learn.link4.url')"><img src="$msg.get('efs.title.learn.link4.thumbnail')" align="middle">$msg.get("efs.title.learn.link4")</a>
    <br/>$msg.get("form.required.fields.instruction")
    </div>
    <form action="" class="curriki-form1" id="inline" method="post">
    <input type="hidden" name="xredirect" value="$xwiki.getFormEncoded($xwiki.getRequestURL())"/>
    ##sign validation result, default is validate not passed
    <input type="hidden" name="CurrikiCode.TextAssetClass_0_text" id="CurrikiCode.TextAssetClass_0_text" value="$msg.get('form.done.wysiwyg.error.wikitext')"/>
    <input type="hidden" name="CurrikiCode.TextAssetClass_0_type" id="CurrikiCode.TextAssetClass_0_type" value="0"/>
    ## this ICT2 is no use now
    ##<input type="hidden" name="CurrikiCode.AssetClass_0_instructional_component2" id="CurrikiCode.AssetClass_0_instructional_component2" value="curriculum_lp"/>
    <input type="hidden" name="CurrikiCode.AssetClass_0_hidden_from_search" id="CurrikiCode.AssetClass_0_hidden_from_search" value="0"/>
    <input type="hidden" name="CurrikiCode.AssetClass_0_category" id="CurrikiCode.AssetClass_0_category" value="text"/>
    ## successMessage is null, validation not passed
    <input type="hidden" name="successMessage" id="successMessage" value=""/>
    <input type="hidden" name="page" value="$!request.page"/>
    <input type="hidden" name="pageName" value="$!newAsset.fullName"/>
    <input type="hidden" name="publishSpace" value="$!publishSpace"/>
    <input type="hidden" name="parentPage" value="$!parentPage"/>
    #if("$!noDialogs"!="")
      <input type="hidden" name="noDialogs" value="$noDialogs"/>
    #else
      <input type="hidden" name="flow" value="$!flow"/>
      <input type="hidden" name="createLessonURL" value="$msg.get('efs.url')"/> ## for google analytics
      ## this is the real ICT value
      <input type="hidden" name="CurrikiCode.AssetClass_0_instructional_component" id="CurrikiCode.AssetClass_0_instructional_component" value="curriculum_lp"/>
      <input type="hidden" name="cameFrom" #if( "$!cameFrom"=="" ) value="$msg.get('efs.url')" #else value="$!cameFrom" #end/>
    #end
    #################################### step1 
    #curriki_formpart_begin($msg.get("efs.step1.header"))
    #curriki_forminstructions($msg.get("efs.step1.instruction"))
    #curriki_formprompt($msg.get("efs.step1.title_title"), $msg.get("efs.step1.title_tooltip"), $msg.get("efs.step1.title_txt"), true, "medium")
    <input type="text" id="CurrikiCode.AssetClass_0_title" name="CurrikiCode.AssetClass_0_title" />
    #curriki_formprompt($msg.get("efs.step1.description_title"), $msg.get("efs.step1.description_tooltip"), $msg.get("efs.step1.description_txt"), true, "medium")
    $newAsset.display("description","edit")
    <table class="subject-educational"><tbody><tr><td>
    #curriki_formprompt($msg.get("sri.fw_items_title"), $msg.get("sri.fw_items_tooltip"), $msg.get("sri.fw_items_txt"), true, "")
#skbListHereEditable( "CurrikiCode.AssetClass_0_trainedTopicsAndCompetencies" "trainedTopicsAndCompetencies" "topic, competency" "$!asset.trainedTopicsAndCompetencies")
##    $newAsset.display("fw_items","edit")
    </td><td>
    #curriki_formprompt($msg.get("sri.educational_level_title"), $msg.get("sri.educational_level_tooltip"), $msg.get("sri.educational_level_txt"), true, "medium")
#skbListHereEditable( "CurrikiCode.AssetClass_0_eduLevelFine" "eduLevelFine" "level" "$!asset.eduLevelFine")
##    $newAsset.display("educational_level","edit")
    </td></tr></tbody></table> ##class="subject-educational"
    #curriki_formprompt($msg.get("sri.keywords_title"), $msg.get("sri.keywords_tooltip"), $msg.get("sri.keywords_txt"), false, "medium")
    $newAsset.display("keywords","edit")
    #curriki_formprompt($msg.get("sri.language_title"), $msg.get("sri.language_tooltip"), $msg.get("sri.language_txt"), false, "medium")
    <select name="CurrikiCode.AssetClass_0_language" size="1" style="position:absolute; left:8; top:8; width:88; height:22; display:block;" onchange="EintragPruefen('ComboBox', 'Edit')">
    <option value='${con.getLanguageId($lang,true)}'>$con.getLanguageName($lang,$lang)</option>
    #set($supportedLanguages2 = $xwiki.getXWikiPreference("languages").replaceAll(","," "))
    #foreach($lang2 in $supportedLanguages2.split(" "))##
	  #if($lang!=$lang2)
		  <option value='${con.getLanguageId($lang2,true)}'>$con.getLanguageName($lang2,$lang2)</option>
	  #end
	  #end
</select>
 ##$newAsset.display("language","edit")
    #curriki_formpart_end() 
    #################################### step2
    #curriki_formpart_begin($msg.get("efs.step2.header")) ## {
    #curriki_forminstructions($msg.get("efs.step2.instruction"))
    ##Summary:
    #curriki_formprompt($msg.get("efs.step2.summary.title"), "", $msg.get("efs.step2.summary.instruction"), true, "medium")
    <div id="summary_div"></div>
    ##Standards:
    #curriki_formprompt($msg.get("efs.step2.standards.title"), $msg.get("efs.step2.standards.tooltip"), $msg.get("efs.step2.standards.instruction"), true, "medium")
    <textarea id="nlp_standards" name="nlp_standards"></textarea>  ## in JS, this is replaced w/ WYSIWYG
    ##Overarching Question:
    #curriki_formprompt($msg.get("efs.step2.overarching_question.title"), "", $msg.get("efs.step2.overarching_question.instruction"), false, "medium")
    <textarea id="nlp_overarching_question" name="nlp_overarching_question"></textarea>
    ##Essential Question:
    #curriki_formprompt($msg.get("efs.step2.essential_question.title"), $msg.get("efs.step2.essential_question.tooltip"), $msg.get("efs.step2.essential_question.instruction"), true, "medium")
    <textarea id="nlp_essential_question" name="nlp_essential_question"></textarea>
    ##Guiding Question(s):
    #curriki_formprompt($msg.get("efs.step2.guiding_question.title"), $msg.get("efs.step2.guiding_question.tooltip"), $msg.get("efs.step2.guiding_question.instruction"), true, "medium")
    <textarea id="nlp_guiding_question" name="nlp_guiding_question"></textarea>
    ##Resources & Materials:
    #curriki_formprompt($msg.get("efs.step2.materials.title"), "", $msg.get("efs.step2.materials.instruction"), true, "medium")
    <textarea id="nlp_materials" name="nlp_materials"></textarea>
    ##Learning Opportunities, Activities, & Procedures:
    #curriki_formprompt($msg.get("efs.step2.procedures.title"), $msg.get("efs.step2.procedures.tooltip"), $msg.get("efs.step2.procedures.instruction"), true, "medium")
    <div id="procedures_div"></div>
    <button class="button button-orange" id="addRowBtn_procedures" onclick="return addrow(1);">$msg.get("efs.step2.procedures.addrow")</button>
    ##Instructional & Environmental Modifications:
    #curriki_formprompt($msg.get("efs.step2.modifications.title"), $msg.get("efs.step2.modifications.tooltip"), $msg.get("efs.step2.modifications.instruction"), true, "medium")
    <textarea id="nlp_modifications" name="nlp_modifications"></textarea>
    ##Assessments & Scoring Criteria:
    #curriki_formprompt($msg.get("efs.step2.assessment.title"), $msg.get("efs.step2.assessment.tooltip"), $msg.get("efs.step2.assessment.instruction"), true, "medium")
    <div id="assessment_div"></div>
    <button class="button button-orange" id="addRowBtn_assessment" onclick="return addrow(2);">$msg.get("efs.step2.assessment.addrow")</button>
    ##Glossary:
    #curriki_formprompt($msg.get("efs.step2.glossary.title"), "", $msg.get("efs.step2.glossary.instruction"), true, "medium")
    <textarea id="nlp_glossary" name="nlp_glossary"></textarea>
    ##Reflection:
    #curriki_formprompt($msg.get("efs.step2.reflection.title"), $msg.get("efs.step2.reflection.tooltip"), $msg.get("efs.step2.reflection.instruction"), false, "medium")
    <textarea id="nlp_reflection" name="nlp_reflection"></textarea>
    ##Student Work:
    #curriki_formprompt($msg.get("efs.step2.student_work.title"), "", $msg.get("efs.step2.student_work.instruction"), true, "medium")
    <textarea id="nlp_student_work" name="nlp_student_work"></textarea>
    ##Required Attachments:
    #curriki_formprompt($msg.get("efs.step2.required.attachments.title"), $msg.get("efs.step2.required.attachments.tooltip"), $msg.get("efs.step2.required.attachments.instruction"), false, "")
    <iframe src="$newAsset.getURL("view", "xpage=lpattachments")" onload="try { setAttachmentsIframeSize(); } catch(e) { alert('iframe onload error: '+e+' ...'); return false; }"
    id="attachment_iframe" name="attachment_iframe" width="100%" scrolling="auto" marginheight="0" marginwidth="0"  frameborder="0">
    <h2>Sorry, your browser doesn't support iframes. Attachment Uploading functionality disabled.</h2> 
    </iframe>
    #curriki_formpart_end() ## }
    #################################### step3
    #curriki_formpart_begin($msg.get("efs.step3.header")) 
    #curriki_forminstructions($msg.get("efs.step3.instruction"))
    #curriki_formprompt($msg.get("sri.right_holder_title"), $msg.get("sri.right_holder_tooltip"), $msg.get("sri.right_holder_txt"), true, "medium")
    $newAsset.display("rightsHolder","edit")
    #curriki_formprompt($msg.get("sri.rights_title"), $msg.get("sri.rights_tooltip"), $msg.get("sri.rights_txt"), false, "medium")
    $newAsset.display("rights", "edit")
    #curriki_formprompt($msg.get("sri.license_type_title"), $msg.get("sri.license_type_tooltip"), $msg.get("sri.license_type_txt"), false, "medium")
    <p><label>$msg.get("sri.license_type_heading")</label></p>        
    $newAsset.display("licenseType","edit")
    #curriki_formpart_end() 
    #################################### step4
    #curriki_formpart_begin($msg.get("efs.step4.header")) 
    <p><label>$msg.get("efs.step4.instruction")</label></p>
    <p class="links">
    <button onclick="try { if (document.forms.inline.onsubmit) document.forms.inline.onsubmit(); if (checkTemplateForm()) { clearUnloadDialog(); startWaitingDialog(); document.forms.inline.action='$msg.get("form.done.url")'; document.forms.inline.submit(); } return false; } catch(e) { alert('$msg.get("form.scratch.submit.button") button onclick error: '+e+' ...'); return false; }">$msg.get("efs.submit.button")</button>
    #if( "$!cameFrom" != "" ) 
      #set( $cancelURL = $cameFrom )
    #else 
      #set( $cancelURL = $xwiki.getURL("Main.WebHome") ) ## cameFrom not set means go to WebHome
    #end 
    <button class="cancel" onclick="try { clearUnloadDialog(); window.location.href='$cancelURL'; return false; } catch(e) { alert('$msg.get("form.scratch.cancel.button") button onclick error: '+e+' ...'); return false; }">$msg.get("efs.cancel.button")</button>
    </p>
    #curriki_formpart_end() 
    #####################################################################
    ##<div class="tooltips">
    ##{pre}$xwiki.addTooltipJS(){/pre}
    ##</div>
    <div id="tooltip_div" class="tooltips"></div>
    </form>
    #set( $noWYSIWYG  = $request.getParameter("noWYSIWYG") ) ##For testing,etc, add parameter ?noWYSIWYG=1 to force WYSIWYG editors to not display, and use TEXTAREA instead
    #if( "$!noWYSIWYG" == "" ) ## {
      #curriki_wysiwyg_loader_preamble()
      #if( "$!publishSpace"=="" )            ## {
        #set( $user = $context.user )
        #if( $user.startsWith("XWiki.") )    ## {
          #set( $shortname = $user.substring(6) )
        #else                                ## } {
          #set( $shortname = $user )
        #end                                 ## }
        #set( $wysi_publishSpace = "Coll_${shortname}" )
      #else ## } {
        #set( $wysi_publishSpace = $publishSpace )
      #end                                   ## }
      #curriki_SLP_wysiwyg_loader_editor("nlp_standards", $newAsset, $wysi_publishSpace)        ## id="mce_editor_0"
    #end ## } -- if "$!noWYSIWYG"==""
    {pre}<script language="javascript" type="text/javascript">
    /* <![CDATA[ */
    /*
     * this javascript code  must be at end, otherwise  strange   things
     * happen, like "License Deed" doesn't show up...
     */
    function startWaitingDialog() {
    #if( "$!noDialogs"!="1" )  ## {
      Curriki.showLoading();
    #end ## }
    }
    /*
     * on window unload, dialog warning of dataloss
     */
    setUnloadDialog();
    /*
     * HACK: Tell TinyMCE to leave-alone the URL's ... they are fine as-is.. as relative links
     * during edit in AssetTemp/xxxxxxx, and as permanent links in $wysi_publishSpace on save
     */
    tinyMCE.convertURL = function(url, node, on_save) { return url; };
    /* ]]> */
    </script>{/pre}
  #end ## } -- else, aka "$!newAsset"!="" 
#end ## } -- $context.user=="XWiki.XWikiGuest"