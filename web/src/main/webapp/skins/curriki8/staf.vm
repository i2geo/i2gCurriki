#**
 * Displays Curriki Staf links for the footer
 *#
<div id="staf" class="frame send-a-friend" style="display: none;">
<div class="titleheader titleheader-blue">
<h3>$msg.get('staf.dialog.title')</h3>
</div>
<div id="staferr" style="display: none;" class="errormessage">
</div>
<form id="stafform" class="frame-content">
<input type="hidden" id="stafresource" name="resource" value="$xwiki.getURL($doc.getFullName())" />
<label class="top-label">$msg.get('staf.dialog.recipients')</label>
<p class="explanatory">$msg.get('staf.dialog.recipients.comments')</p>
<textarea id="stafrecipients" name="recipients"></textarea>
<br />
<label>$msg.get('staf.dialog.customize')</label>
<textarea id="stafcomment" name="comment">$msg.get('staf.dialog.customize.default')</textarea>
<textarea id="stafcommentdefault" name="defaultcomment" style="display: none;">$msg.get('staf.dialog.customize.default')</textarea>
<br />
<label>$msg.get('staf.dialog.yourname')</label>
#set($userDoc = $xwiki.getDocument($context.user))
#set($userObj = $userDoc.getObject("XWiki.XWikiUsers"))
#set($name1 = $!userObj.getProperty("first_name").getValue())
#set($name2 = $!userObj.getProperty("last_name").getValue())
#set($name = "$!name1 $!name2")
<input type="text" id="staffromname" name="fromname" maxlength="64" value="$name" />
<input type="hidden" id="staffromnamedefault" name="defaultfromname" maxlength="64" value="$name" />
<br />
<p><input type="checkbox" id="ccme" name="ccme" /> $msg.get('staf.dialog.ccme')</p>
<strong>$msg.get('staf.dialog.youremail')</strong>
#set($email = $!userObj.getProperty("email").getValue())
$!email
<br />
<p>$msg.get('staf.dialog.privacy')<p>
<div class="button-links">
<button class="button button-grey" onclick="stafCancel(); return false;">$msg.get('staf.dialog.cancel')</button>  <button class="button button-orange" onclick="stafSend(); return false;">$msg.get('staf.dialog.send')</button>
</div>
</form>
</div>
<script type="text/javascript">
/* <![CDATA[ */
var windowState = (function(){
	var readScroll = {scrollLeft:0,scrollTop:0};
	var readSize = {clientWidth:0,clientHeight:0};
	var readScrollX = 'scrollLeft';
	var readScrollY = 'scrollTop';
	var readWidth = 'clientWidth';
	var readHeight = 'clientHeight';
	function otherWindowTest(obj){
		if((document.compatMode) && (document.compatMode == 'CSS1Compat') && (document.documentElement)){
			return document.documentElement;
		} else if(document.body) {
			return document.body;
		} else {
			return obj;
		}
	};
	if((typeof this.innerHeight == 'number') && (typeof this.innerWidth == 'number')){
		readSize = this;
		readWidth = 'innerWidth';
		readHeight = 'innerHeight';
	} else {
		readSize = otherWindowTest(readSize);
	}
	if((typeof this.pageYOffset == 'number') && (typeof this.pageXOffset == 'number')){
		readScroll = this;
		readScrollY = 'pageYOffset';
		readScrollX = 'pageXOffset';
	} else {
		readScroll = otherWindowTest(readScroll);
	}
	return {
		getScrollX:function(){ return (readScroll[readScrollX]||0); },
		getScrollY:function(){ return (readScroll[readScrollY]||0); },
		getWidth:function(){ return (readSize[readWidth]||0); },
		getHeight:function(){ return (readSize[readHeight]||0); }
	};
})();

function addOverlay(){
	var d=document.createElement('div');
	d.setAttribute('id', "washout");
	d.setAttribute('class', "tk-GlassPanel");
	d.style.display = "block";
	d.style.position = "absolute";
	d.style.top = "0px";
	d.style.left = "0px";
	d.style.width = $('body').offsetWidth+"px";
	d.style.height = ($('body').offsetHeight+25)+"px";
	$('body').appendChild(d);
}

function removeOverlay(){
	$('body').removeChild($('washout'));
}

function stafShow(resource){
	addOverlay();
	$('body').appendChild($('staf'));
	$('stafresource').value = resource;
	$('staf').show();
	var hPos = Math.round(windowState.getScrollX()+((windowState.getWidth()-$('staf').offsetWidth)/2));
	var vPos = Math.round(windowState.getScrollY()+((windowState.getHeight()-$('staf').offsetHeight)/2));
	hPos = (hPos < 0)?0:hPos;
	vPos = (vPos < 0)?0:vPos;
	$('staf').style.left = hPos+"px";
	$('staf').style.top = vPos+"px";
	if (window.pageTracker){
		pageTracker._trackPageview('/features/staf/opened');
	}
}

function stafHide(){
	$('staferr').innerHTML = "";
	$('staferr').hide();
	$('staf').hide();
	removeOverlay();
}

function stafCancel(){
	var checkCancel = false;
	var doCancel = true;
	if ($('stafrecipients').value != '') {
		checkCancel = true;
	}
	if ($('stafcomment').value != $('stafcommentdefault').value) {
		checkCancel = true;
	}
	if ($('staffromname').value != $('staffromnamedefault').value) {
		checkCancel = true;
	}
	if (checkCancel) {
		doCancel = confirm("$msg.get('staf.dialog.shouldcancel')");
	}
	if (doCancel) {
		stafHide();
		$('stafrecipients').value = '';
		$('stafcomment').value = $('stafcommentdefault').value;
		$('staffromname').value = $('staffromnamedefault').value;
		if (window.pageTracker){
			pageTracker._trackPageview('/features/staf/cancel/cancelled');
		}
	} else {
		if (window.pageTracker){
			pageTracker._trackPageview('/features/staf/cancel/notcancelled');
		}
	}
}

function stafSend(){
	new Ajax.Request('$xwiki.getURL('STAF.SendMessage', 'view', 'xpage=plain')', {
		method: 'post',
		parameters: $('stafform').serialize(true),
		onSuccess: function(transport, json){
			if (json) {
				if (json.err){
					$('staferr').innerHTML = json.err;
					$('staferr').show();
					if (window.pageTracker){
						pageTracker._trackPageview('/features/staf/corrections_needed');
					}
				} else if (json.ok) {
					if (window.pageTracker){
						pageTracker._trackPageview('/features/staf/sent/'+$('stafresource').value);
					}
					alert("$msg.get('staf.sent.okaymsg')");
					stafHide();
					$('stafrecipients').value = '';
					$('stafcomment').value = $('stafcommentdefault').value;
					$('staffromname').value = $('staffromnamedefault').value;
				} else {
					if (window.pageTracker){
						pageTracker._trackPageview('/features/staf/error/novalue');
					}
					alert("$msg.get('staf.sent.errored')");
				}
			} else {
				if (window.pageTracker){
					pageTracker._trackPageview('/features/staf/error/nojson');
				}
				alert("$msg.get('staf.sent.errored')");
			}
		},
		onFailure: function(){
			if (window.pageTracker){
				pageTracker._trackPageview('/features/staf/error/failed');
			}
			alert("$msg.get('staf.sent.errored')");
		}
	});
}
/* ]]> */
</script>
